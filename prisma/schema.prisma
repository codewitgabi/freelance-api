generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  client
  freelancer
  admin
}

enum JobStatus {
  open
  close
}

enum BidStatus {
  accepted
  rejected
  pending
}

enum TransactionType {
  debit
  credit
  refund
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  username     String        @db.VarChar(30)
  password     String
  firstName    String?       @db.VarChar(50)
  lastName     String?       @db.VarChar(50)
  role         Role          @default(freelancer)
  banned       Boolean       @default(false)
  createdAt    DateTime      @default(now())
  bids         Bid[]
  transactions Transaction[]
  jobs         Job[]

  walletId Int    @unique
  wallet   Wallet @relation(fields: [walletId], references: [id])

  @@map("users")
}

model Bid {
  id     Int       @id @default(autoincrement())
  budget Decimal   @default(0.00)
  userId Int
  user   User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  status BidStatus @default(pending)
  jobId  Int

  job Job @relation(fields: [jobId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("bids")
}

model Job {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  budget      Decimal   @default(0.00)
  deadline    DateTime
  status      JobStatus @default(open)
  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bids        Bid[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("jobs")
}

model Wallet {
  id      Int     @id @default(autoincrement())
  balance Decimal @default(0.00) @db.Decimal(12, 2)
  user    User?

  @@map("wallets")
}

model Transaction {
  id        Int             @id @default(autoincrement())
  amount    Decimal         @default(0.00)
  userId    Int
  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  type      TransactionType @default(debit)
  createdAt DateTime        @default(now())

  @@map("transactions")
}
